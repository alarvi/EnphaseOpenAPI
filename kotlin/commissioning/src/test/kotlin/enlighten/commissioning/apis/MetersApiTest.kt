/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.commissioning.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import enlighten.commissioning.apis.MetersApi
import enlighten.commissioning.models.GetSystemMeterResponse
import enlighten.commissioning.models.ServerError
import enlighten.commissioning.models.SetActivationMeterStatusRequest
import enlighten.commissioning.models.SetActivationMeterStatusResponse
import enlighten.commissioning.models.TooManyRequestsError
import enlighten.commissioning.models.UnprocessableEntityError
import enlighten.commissioning.models.UpdateSystemMeterResponse

class MetersApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of MetersApi
        //val apiInstance = MetersApi()

        // to test getSystemMeter
        should("test getSystemMeter") {
            // uncomment below to test getSystemMeter
            //val systemId : kotlin.Int = 56 // kotlin.Int | System ID.
            //val serialNumber : kotlin.String = serialNumber_example // kotlin.String | Meter serial number.
            //val result : GetSystemMeterResponse = apiInstance.getSystemMeter(systemId, serialNumber)
            //result shouldBe ("TODO")
        }

        // to test setActivationMeterStatus
        should("test setActivationMeterStatus") {
            // uncomment below to test setActivationMeterStatus
            //val activationId : kotlin.Int = 56 // kotlin.Int | Activation ID.
            //val serialNumber : kotlin.String = serialNumber_example // kotlin.String | Meter serial number.
            //val params : SetActivationMeterStatusRequest =  // SetActivationMeterStatusRequest | 
            //val result : SetActivationMeterStatusResponse = apiInstance.setActivationMeterStatus(activationId, serialNumber, params)
            //result shouldBe ("TODO")
        }

        // to test updateSystemMeter
        should("test updateSystemMeter") {
            // uncomment below to test updateSystemMeter
            //val systemId : kotlin.Int = 56 // kotlin.Int | System ID.
            //val serialNumber : kotlin.String = serialNumber_example // kotlin.String | Meter serial number.
            //val operationalDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Operational date in the following format YYYY-MM-DD.
            //val result : UpdateSystemMeterResponse = apiInstance.updateSystemMeter(systemId, serialNumber, operationalDate)
            //result shouldBe ("TODO")
        }

    }
}
