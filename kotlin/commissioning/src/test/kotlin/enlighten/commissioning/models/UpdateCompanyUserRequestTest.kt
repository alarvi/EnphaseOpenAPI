/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.commissioning.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import enlighten.commissioning.models.UpdateCompanyUserRequest

class UpdateCompanyUserRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UpdateCompanyUserRequest
        //val modelInstance = UpdateCompanyUserRequest()

        // to test the property `companyId` - Enlighten-generated ID of the company to which the user belongs, if any. Use the 'company' attribute instead, and the query parameter 'expand=company' to get detailed company information.
        should("test companyId") {
            // uncomment below to test the property
            //modelInstance.companyId shouldBe ("TODO")
        }

        // to test the property `email` - Email address of the user. Must be unique within Enlighten. Required.
        should("test email") {
            // uncomment below to test the property
            //modelInstance.email shouldBe ("TODO")
        }

        // to test the property `enlightenEmails` - Whether the user receives automated emails from Enlighten. Default false.
        should("test enlightenEmails") {
            // uncomment below to test the property
            //modelInstance.enlightenEmails shouldBe ("TODO")
        }

        // to test the property `firstName` - User's first name. Required.
        should("test firstName") {
            // uncomment below to test the property
            //modelInstance.firstName shouldBe ("TODO")
        }

        // to test the property `lastName` - User's last name. Required.
        should("test lastName") {
            // uncomment below to test the property
            //modelInstance.lastName shouldBe ("TODO")
        }

        // to test the property `phone` - Telephone number of the user. Optional.
        should("test phone") {
            // uncomment below to test the property
            //modelInstance.phone shouldBe ("TODO")
        }

    }
}
