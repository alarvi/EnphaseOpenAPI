/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.commissioning.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import enlighten.commissioning.models.GetPartnerActivationsResponseSystemsInner
import enlighten.commissioning.models.Address
import enlighten.commissioning.models.GetPartnerActivationsResponseSystemsInnerAuthorizedSubcontractorsInner
import enlighten.commissioning.models.SystemInternetConnectionEnum
import enlighten.commissioning.models.SystemTypeEnum

class GetPartnerActivationsResponseSystemsInnerTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetPartnerActivationsResponseSystemsInner
        //val modelInstance = GetPartnerActivationsResponseSystemsInner()

        // to test the property `systemId` - Enlighten ID of this system. System-generated.
        should("test systemId") {
            // uncomment below to test the property
            //modelInstance.systemId shouldBe ("TODO")
        }

        // to test the property `systemName` - Name of the system.
        should("test systemName") {
            // uncomment below to test the property
            //modelInstance.systemName shouldBe ("TODO")
        }

        // to test the property `systemType`
        should("test systemType") {
            // uncomment below to test the property
            //modelInstance.systemType shouldBe ("TODO")
        }

        // to test the property `status` - System's status.
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `timezone` - System's timezone.
        should("test timezone") {
            // uncomment below to test the property
            //modelInstance.timezone shouldBe ("TODO")
        }

        // to test the property `stage` - What stage of the activation process this activation is in. System-generated.
        should("test stage") {
            // uncomment below to test the property
            //modelInstance.stage shouldBe ("TODO")
        }

        // to test the property `internetConnection`
        should("test internetConnection") {
            // uncomment below to test the property
            //modelInstance.internetConnection shouldBe ("TODO")
        }

        // to test the property `lease` - Whether the system is leased. Default false.
        should("test lease") {
            // uncomment below to test the property
            //modelInstance.lease shouldBe ("TODO")
        }

        // to test the property `operational` - Whether this system is permitted to operate. Default true.
        should("test operational") {
            // uncomment below to test the property
            //modelInstance.operational shouldBe ("TODO")
        }

        // to test the property `owner` - Name of the system owner. Owner must be an Enlighten user. If the user of the API is a self-installer, the owner must be himself.
        should("test owner") {
            // uncomment below to test the property
            //modelInstance.owner shouldBe ("TODO")
        }

        // to test the property `ownerId` - Enlighten ID of this system owner. System-generated.
        should("test ownerId") {
            // uncomment below to test the property
            //modelInstance.ownerId shouldBe ("TODO")
        }

        // to test the property `host` - Name of the system host.
        should("test host") {
            // uncomment below to test the property
            //modelInstance.host shouldBe ("TODO")
        }

        // to test the property `hostId` - Enlighten ID of this system host. System-generated.
        should("test hostId") {
            // uncomment below to test the property
            //modelInstance.hostId shouldBe ("TODO")
        }

        // to test the property `installerName` - Name of the installer.
        should("test installerName") {
            // uncomment below to test the property
            //modelInstance.installerName shouldBe ("TODO")
        }

        // to test the property `installerId` - Enlighten ID of the installer of this system.
        should("test installerId") {
            // uncomment below to test the property
            //modelInstance.installerId shouldBe ("TODO")
        }

        // to test the property `maintainerName` - Name of the maintainer.
        should("test maintainerName") {
            // uncomment below to test the property
            //modelInstance.maintainerName shouldBe ("TODO")
        }

        // to test the property `maintainerId` - Enlighten ID of the maintainer of this system.
        should("test maintainerId") {
            // uncomment below to test the property
            //modelInstance.maintainerId shouldBe ("TODO")
        }

        // to test the property `authorizedSubcontractors` - List of sub-contractors of this system.
        should("test authorizedSubcontractors") {
            // uncomment below to test the property
            //modelInstance.authorizedSubcontractors shouldBe ("TODO")
        }

        // to test the property `uri` - URI for this activation.
        should("test uri") {
            // uncomment below to test the property
            //modelInstance.uri shouldBe ("TODO")
        }

        // to test the property `updatedAt` - Activation last updated timestamp.
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

        // to test the property `reference` - Identifier of this system as provided by the calling user's company. This attribute is not present if the calling user's company does not have a reference for this system.
        should("test reference") {
            // uncomment below to test the property
            //modelInstance.reference shouldBe ("TODO")
        }

        // to test the property `otherReferences` - Identifiers assigned to this activation by other companies which have access to it. This attribute is not present if there are no other references for this system.
        should("test otherReferences") {
            // uncomment below to test the property
            //modelInstance.otherReferences shouldBe ("TODO")
        }

        // to test the property `address`
        should("test address") {
            // uncomment below to test the property
            //modelInstance.address shouldBe ("TODO")
        }

    }
}
