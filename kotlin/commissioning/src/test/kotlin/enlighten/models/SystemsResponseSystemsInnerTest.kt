/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import enlighten.models.SystemsResponseSystemsInner
import enlighten.models.ConnectionType
import enlighten.models.Meta

class SystemsResponseSystemsInnerTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SystemsResponseSystemsInner
        //val modelInstance = SystemsResponseSystemsInner()

        // to test the property `systemId` - The Enlighten ID of the system.
        should("test systemId") {
            // uncomment below to test the property
            //modelInstance.systemId shouldBe ("TODO")
        }

        // to test the property `systemName` - The name of the system. Even if the system owner has indicated their site is anonymous for public lists, the actual system name is returned here for identification purposes.
        should("test systemName") {
            // uncomment below to test the property
            //modelInstance.systemName shouldBe ("TODO")
        }

        // to test the property `systemPublicName` - The display name of the system. Use this when displaying the system name on a public list or view.
        should("test systemPublicName") {
            // uncomment below to test the property
            //modelInstance.systemPublicName shouldBe ("TODO")
        }

        // to test the property `country` - The two-letter code for the country where the system is located. See [ISO_3166-1_alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) for reference.
        should("test country") {
            // uncomment below to test the property
            //modelInstance.country shouldBe ("TODO")
        }

        // to test the property `state` - The two-letter code for the state where the system is located. See [ISO_3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) for reference.
        should("test state") {
            // uncomment below to test the property
            //modelInstance.state shouldBe ("TODO")
        }

        // to test the property `city` - The name of the city where the system is located.
        should("test city") {
            // uncomment below to test the property
            //modelInstance.city shouldBe ("TODO")
        }

        // to test the property `postalCode` - The postal code where the system is located.
        should("test postalCode") {
            // uncomment below to test the property
            //modelInstance.postalCode shouldBe ("TODO")
        }

        // to test the property `timezone` - The timezone of the system.
        should("test timezone") {
            // uncomment below to test the property
            //modelInstance.timezone shouldBe ("TODO")
        }

        // to test the property `connectionType`
        should("test connectionType") {
            // uncomment below to test the property
            //modelInstance.connectionType shouldBe ("TODO")
        }

        // to test the property `status` - The current status of the system. You can find this and more in the `meta` property.
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `meta`
        should("test meta") {
            // uncomment below to test the property
            //modelInstance.meta shouldBe ("TODO")
        }

        // to test the property `reference` - If the calling user belongs to a company and that company has provided its own identifiers for a system, that ID is included here. Otherwise, this attribute is not returned.
        should("test reference") {
            // uncomment below to test the property
            //modelInstance.reference shouldBe ("TODO")
        }

        // to test the property `otherReferences` - If any other companies have provided their own identifiers for a system, those identifiers are included here. Otherwise, this attribute is not returned.
        should("test otherReferences") {
            // uncomment below to test the property
            //modelInstance.otherReferences shouldBe ("TODO")
        }

    }
}
