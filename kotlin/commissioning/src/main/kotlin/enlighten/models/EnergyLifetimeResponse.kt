/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.models

import enlighten.models.Meta

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param startDate When no `start_date` parameter is specified on the request, this is the `operational_date` of the system. May be null if system has never produced. When a `start_date` parameter is included in the request, it is included here in the response.
 * @param systemId The identifier of the system.
 * @param production An array of production measurements, one for each day since the system started producing, or one for each day of the requested period. If the system has never produced energy, the array may be empty.
 * @param meta 
 * @param microProduction 
 * @param meterProduction 
 * @param meterStartDate The first day in the time series when measurements are taken from a meter instead of from microinverters. This field is not present unless the system has a meter.
 */


data class EnergyLifetimeResponse (

    /* When no `start_date` parameter is specified on the request, this is the `operational_date` of the system. May be null if system has never produced. When a `start_date` parameter is included in the request, it is included here in the response. */
    @Json(name = "start_date")
    val startDate: java.time.LocalDate,

    /* The identifier of the system. */
    @Json(name = "system_id")
    val systemId: kotlin.Int,

    /* An array of production measurements, one for each day since the system started producing, or one for each day of the requested period. If the system has never produced energy, the array may be empty. */
    @Json(name = "production")
    val production: kotlin.collections.List<kotlin.Int>,

    @Json(name = "meta")
    val meta: Meta,

    @Json(name = "micro_production")
    val microProduction: kotlin.collections.List<kotlin.Int>? = null,

    @Json(name = "meter_production")
    val meterProduction: kotlin.collections.List<kotlin.Int>? = null,

    /* The first day in the time series when measurements are taken from a meter instead of from microinverters. This field is not present unless the system has a meter. */
    @Json(name = "meter_start_date")
    val meterStartDate: java.time.LocalDate? = null

)

