/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.models

import enlighten.models.ConnectionType
import enlighten.models.Meta

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param systemId The Enlighten ID of the system.
 * @param systemName The name of the system. Even if the system owner has indicated their site is anonymous for public lists, the actual system name is returned here for identification purposes.
 * @param systemPublicName The display name of the system. Use this when displaying the system name on a public list or view.
 * @param country The two-letter code for the country where the system is located. See [ISO_3166-1_alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) for reference.
 * @param state The two-letter code for the state where the system is located. See [ISO_3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) for reference.
 * @param city The name of the city where the system is located.
 * @param postalCode The postal code where the system is located.
 * @param timezone The timezone of the system.
 * @param connectionType 
 * @param status The current status of the system. You can find this and more in the `meta` property.
 * @param meta 
 * @param reference If the calling user belongs to a company and that company has provided its own identifiers for a system, that ID is included here. Otherwise, this attribute is not returned.
 * @param otherReferences If any other companies have provided their own identifiers for a system, those identifiers are included here. Otherwise, this attribute is not returned.
 */


data class SystemsResponseSystemsInner (

    /* The Enlighten ID of the system. */
    @Json(name = "system_id")
    val systemId: kotlin.Int,

    /* The name of the system. Even if the system owner has indicated their site is anonymous for public lists, the actual system name is returned here for identification purposes. */
    @Json(name = "system_name")
    val systemName: kotlin.String,

    /* The display name of the system. Use this when displaying the system name on a public list or view. */
    @Json(name = "system_public_name")
    val systemPublicName: kotlin.String,

    /* The two-letter code for the country where the system is located. See [ISO_3166-1_alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) for reference. */
    @Json(name = "country")
    val country: kotlin.String,

    /* The two-letter code for the state where the system is located. See [ISO_3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) for reference. */
    @Json(name = "state")
    val state: kotlin.String,

    /* The name of the city where the system is located. */
    @Json(name = "city")
    val city: kotlin.String,

    /* The postal code where the system is located. */
    @Json(name = "postal_code")
    val postalCode: kotlin.String,

    /* The timezone of the system. */
    @Json(name = "timezone")
    val timezone: kotlin.String,

    @Json(name = "connection_type")
    val connectionType: ConnectionType,

    /* The current status of the system. You can find this and more in the `meta` property. */
    @Json(name = "status")
    @Deprecated(message = "This property is deprecated.")
    val status: SystemsResponseSystemsInner.Status,

    @Json(name = "meta")
    val meta: Meta,

    /* If the calling user belongs to a company and that company has provided its own identifiers for a system, that ID is included here. Otherwise, this attribute is not returned. */
    @Json(name = "reference")
    val reference: kotlin.String? = null,

    /* If any other companies have provided their own identifiers for a system, those identifiers are included here. Otherwise, this attribute is not returned. */
    @Json(name = "other_references")
    val otherReferences: kotlin.collections.List<kotlin.String>? = null

) {

    /**
     * The current status of the system. You can find this and more in the `meta` property.
     *
     * Values: comm,power,meter,meter_issue,micro,battery,storage_idle,normal
     */
    @JsonClass(generateAdapter = false)
    enum class Status(val value: kotlin.String) {
        @Json(name = "comm") comm("comm"),
        @Json(name = "power") power("power"),
        @Json(name = "meter") meter("meter"),
        @Json(name = "meter_issue") meter_issue("meter_issue"),
        @Json(name = "micro") micro("micro"),
        @Json(name = "battery") battery("battery"),
        @Json(name = "storage_idle") storage_idle("storage_idle"),
        @Json(name = "normal") normal("normal");
    }
}

