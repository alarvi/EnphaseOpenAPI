/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.commissioning.models

import enlighten.commissioning.models.ActivationEnchargeInner
import enlighten.commissioning.models.ActivationEnpowerInner
import enlighten.commissioning.models.ActivationHost
import enlighten.commissioning.models.ActivationOwner
import enlighten.commissioning.models.Address
import enlighten.commissioning.models.GetPartnerActivationsResponseSystemsInnerAuthorizedSubcontractorsInner
import enlighten.commissioning.models.SystemArrayTypeEnum
import enlighten.commissioning.models.SystemAttachmentTypeEnum
import enlighten.commissioning.models.SystemInternetConnectionEnum
import enlighten.commissioning.models.SystemProductionModeEnum
import enlighten.commissioning.models.SystemSourceEnum
import enlighten.commissioning.models.SystemTypeEnum

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param systemId Enlighten ID of this system. System-generated.
 * @param systemName Name of the system.
 * @param systemType 
 * @param status System's status.
 * @param timezone System's timezone.
 * @param stage What stage of the activation process this activation is in. System-generated.
 * @param internetConnection 
 * @param lease Whether the system is leased. Default false.
 * @param operational Whether this system is permitted to operate. Default true.
 * @param owner 
 * @param ownerId Enlighten ID of this system owner. System-generated. This field is optional.
 * @param host 
 * @param hostId Enlighten ID of this system host. System-generated. This field is optional.
 * @param installerName Name of the installer.
 * @param installerId Enlighten ID of the installer of this system. Defaults to current user's company ID.
 * @param maintainerName Name of the maintainer.
 * @param maintainerId The Enlighten ID of the maintainer of this system. Defaults to current user's company ID.
 * @param authorizedSubcontractors List of sub-contractors of this system.
 * @param uri URI for this activation.
 * @param updatedAt Activation last updated timestamp.
 * @param reference Identifier of this system as provided by the calling user's company. This attribute is not present if the calling user's company does not have a reference for this system.
 * @param otherReferences Identifiers assigned to this activation by other companies which have access to it. This attribute is not present if there are no other references for this system.
 * @param allowPublicAccess When true, the system will be eligible to appear in the public systems lists of Enphase and the system's installer. Default true.
 * @param interconnectDate When the system was approved to connect to the grid.
 * @param installerSupportEmail Installer support email.
 * @param source 
 * @param arrayType 
 * @param attachmentType 
 * @param ensembleEnvoy Specifies serial number of ensemble envoy in multi envoy system.
 * @param productionMode 
 * @param gridProfile Grid profile to set on this system's microinverters. See GridProfiles API for how to retrieve a list of known profiles.
 * @param requestedProfile 
 * @param requestedReportFreq 
 * @param voltage Supported voltage/phase associated with a commercial system inside North America. If system type is not commercial, or if the installer exists & installer's country is not inside North America, or if the system's country is not inside North America, then the voltage value would be null.
 * @param envoySerialNumbers A list of Envoys installed on this system.
 * @param expectedEnvoyCount Total envoys the system is supposed to have.
 * @param expectedPcuCount Total PCUs the system is supposed to have.
 * @param expectedNsrCount Total nsrs the system is supposed to have.
 * @param expectedMeterCount Total meters the system is supposed to have.
 * @param expectedEnchargeCount Total encharges the system is supposed to have.
 * @param expectedEnpowerCount Total enpowers the system is supposed to have.
 * @param pvManufacturer Enlighten ID of the PV manufacturer associated with the PV model installed on the system. See PvManufacturers for how to retrieve PV manufacturer IDs.
 * @param pvManufacturerName Name of the Custom PV module manufacturer associated with the system.
 * @param pvModel Enlighten ID of the PV model installed on the system. See PvManufacturers and PvModels for how to retrieve PV model IDs.
 * @param pvModelName Name of the Custom PV module model associated with the system.
 * @param pvModulePowerRating Power rating (in W) of the PV module installed on the system.
 * @param pvModuleType Type ID of the PV module installed on the system. 1 -> 'Mono-facial', 2 -> 'Bi-facial', 3 -> 'Split cell', 4 -> 'Other'.
 * @param encharge Encharge detail.
 * @param enpower Enpower detail.
 * @param address 
 */


data class Activation (

    /* Enlighten ID of this system. System-generated. */
    @Json(name = "system_id")
    val systemId: kotlin.Int? = null,

    /* Name of the system. */
    @Json(name = "system_name")
    val systemName: kotlin.String? = null,

    @Json(name = "system_type")
    val systemType: SystemTypeEnum? = null,

    /* System's status. */
    @Json(name = "status")
    val status: kotlin.String? = null,

    /* System's timezone. */
    @Json(name = "timezone")
    val timezone: kotlin.String? = null,

    /* What stage of the activation process this activation is in. System-generated. */
    @Json(name = "stage")
    val stage: kotlin.Int? = null,

    @Json(name = "internet_connection")
    val internetConnection: SystemInternetConnectionEnum? = null,

    /* Whether the system is leased. Default false. */
    @Json(name = "lease")
    val lease: kotlin.Boolean? = null,

    /* Whether this system is permitted to operate. Default true. */
    @Json(name = "operational")
    val operational: kotlin.Boolean? = null,

    @Json(name = "owner")
    val owner: ActivationOwner? = null,

    /* Enlighten ID of this system owner. System-generated. This field is optional. */
    @Json(name = "owner_id")
    val ownerId: kotlin.Int? = null,

    @Json(name = "host")
    val host: ActivationHost? = null,

    /* Enlighten ID of this system host. System-generated. This field is optional. */
    @Json(name = "host_id")
    val hostId: kotlin.Int? = null,

    /* Name of the installer. */
    @Json(name = "installer_name")
    val installerName: kotlin.String? = null,

    /* Enlighten ID of the installer of this system. Defaults to current user's company ID. */
    @Json(name = "installer_id")
    val installerId: kotlin.Int? = null,

    /* Name of the maintainer. */
    @Json(name = "maintainer_name")
    val maintainerName: kotlin.String? = null,

    /* The Enlighten ID of the maintainer of this system. Defaults to current user's company ID. */
    @Json(name = "maintainer_id")
    val maintainerId: kotlin.Int? = null,

    /* List of sub-contractors of this system. */
    @Json(name = "authorized_subcontractors")
    val authorizedSubcontractors: kotlin.collections.List<GetPartnerActivationsResponseSystemsInnerAuthorizedSubcontractorsInner>? = null,

    /* URI for this activation. */
    @Json(name = "uri")
    val uri: kotlin.String? = null,

    /* Activation last updated timestamp. */
    @Json(name = "updated_at")
    val updatedAt: kotlin.Long? = null,

    /* Identifier of this system as provided by the calling user's company. This attribute is not present if the calling user's company does not have a reference for this system. */
    @Json(name = "reference")
    val reference: kotlin.String? = null,

    /* Identifiers assigned to this activation by other companies which have access to it. This attribute is not present if there are no other references for this system. */
    @Json(name = "other_references")
    val otherReferences: kotlin.collections.List<kotlin.String>? = null,

    /* When true, the system will be eligible to appear in the public systems lists of Enphase and the system's installer. Default true. */
    @Json(name = "allow_public_access")
    val allowPublicAccess: kotlin.Boolean? = null,

    /* When the system was approved to connect to the grid. */
    @Json(name = "interconnect_date")
    val interconnectDate: java.time.LocalDate? = null,

    /* Installer support email. */
    @Json(name = "installer_support_email")
    val installerSupportEmail: kotlin.String? = null,

    @Json(name = "source")
    val source: SystemSourceEnum? = null,

    @Json(name = "array_type")
    val arrayType: SystemArrayTypeEnum? = null,

    @Json(name = "attachment_type")
    val attachmentType: SystemAttachmentTypeEnum? = null,

    /* Specifies serial number of ensemble envoy in multi envoy system. */
    @Json(name = "ensemble_envoy")
    val ensembleEnvoy: kotlin.String? = null,

    @Json(name = "production_mode")
    val productionMode: SystemProductionModeEnum? = null,

    /* Grid profile to set on this system's microinverters. See GridProfiles API for how to retrieve a list of known profiles. */
    @Json(name = "grid_profile")
    val gridProfile: kotlin.String? = null,

    @Json(name = "requested_profile")
    val requestedProfile: kotlin.String? = null,

    @Json(name = "requested_report_freq")
    val requestedReportFreq: kotlin.String? = null,

    /* Supported voltage/phase associated with a commercial system inside North America. If system type is not commercial, or if the installer exists & installer's country is not inside North America, or if the system's country is not inside North America, then the voltage value would be null. */
    @Json(name = "voltage")
    val voltage: kotlin.String? = null,

    /* A list of Envoys installed on this system. */
    @Json(name = "envoy_serial_numbers")
    val envoySerialNumbers: kotlin.collections.List<kotlin.String>? = null,

    /* Total envoys the system is supposed to have. */
    @Json(name = "expected_envoy_count")
    val expectedEnvoyCount: kotlin.Int? = null,

    /* Total PCUs the system is supposed to have. */
    @Json(name = "expected_pcu_count")
    val expectedPcuCount: kotlin.Int? = null,

    /* Total nsrs the system is supposed to have. */
    @Json(name = "expected_nsr_count")
    val expectedNsrCount: kotlin.Int? = null,

    /* Total meters the system is supposed to have. */
    @Json(name = "expected_meter_count")
    val expectedMeterCount: kotlin.Int? = null,

    /* Total encharges the system is supposed to have. */
    @Json(name = "expected_encharge_count")
    val expectedEnchargeCount: kotlin.Int? = null,

    /* Total enpowers the system is supposed to have. */
    @Json(name = "expected_enpower_count")
    val expectedEnpowerCount: kotlin.Int? = null,

    /* Enlighten ID of the PV manufacturer associated with the PV model installed on the system. See PvManufacturers for how to retrieve PV manufacturer IDs. */
    @Json(name = "pv_manufacturer")
    val pvManufacturer: kotlin.Int? = null,

    /* Name of the Custom PV module manufacturer associated with the system. */
    @Json(name = "pv_manufacturer_name")
    val pvManufacturerName: kotlin.String? = null,

    /* Enlighten ID of the PV model installed on the system. See PvManufacturers and PvModels for how to retrieve PV model IDs. */
    @Json(name = "pv_model")
    val pvModel: kotlin.Int? = null,

    /* Name of the Custom PV module model associated with the system. */
    @Json(name = "pv_model_name")
    val pvModelName: kotlin.String? = null,

    /* Power rating (in W) of the PV module installed on the system. */
    @Json(name = "pv_module_power_rating")
    val pvModulePowerRating: kotlin.Float? = null,

    /* Type ID of the PV module installed on the system. 1 -> 'Mono-facial', 2 -> 'Bi-facial', 3 -> 'Split cell', 4 -> 'Other'. */
    @Json(name = "pv_module_type")
    val pvModuleType: kotlin.Int? = null,

    /* Encharge detail. */
    @Json(name = "encharge")
    val encharge: kotlin.collections.List<ActivationEnchargeInner>? = null,

    /* Enpower detail. */
    @Json(name = "enpower")
    val enpower: kotlin.collections.List<ActivationEnpowerInner>? = null,

    @Json(name = "address")
    val address: Address? = null

)

