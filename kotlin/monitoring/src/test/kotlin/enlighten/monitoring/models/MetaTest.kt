/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import enlighten.monitoring.models.Meta
import enlighten.monitoring.models.SystemStatusEnum

class MetaTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Meta
        //val modelInstance = Meta()

        // to test the property `status`
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `lastReportAt` - Timestamp (in epoch format) at which the system's Envoy last submitted a report.
        should("test lastReportAt") {
            // uncomment below to test the property
            //modelInstance.lastReportAt shouldBe ("TODO")
        }

        // to test the property `lastEnergyAt` - Timestamp (in epoch format) at which the system's produced energy was last reported. Even if the last produced energy is 0, its timestamp will be returned.
        should("test lastEnergyAt") {
            // uncomment below to test the property
            //modelInstance.lastEnergyAt shouldBe ("TODO")
        }

        // to test the property `operationalAt` - Timestamp (in epoch format) at which this system became operational. Corresponds to the system's interconnect time, if one is specified. Otherwise, it is the system's first reported interval end time.
        should("test operationalAt") {
            // uncomment below to test the property
            //modelInstance.operationalAt shouldBe ("TODO")
        }

    }
}
