/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import enlighten.monitoring.models.UpdateSystemBatterySettingsRequest

class UpdateSystemBatterySettingsRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UpdateSystemBatterySettingsRequest
        //val modelInstance = UpdateSystemBatterySettingsRequest()

        // to test the property `batteryMode` - To update battery mode of the system (case sensitive). Available values are Savings Mode, Self-consumption, Full Backup.
        should("test batteryMode") {
            // uncomment below to test the property
            //modelInstance.batteryMode shouldBe ("TODO")
        }

        // to test the property `reserveSoc` - Reserve soc for the current mode. Cannot be less than vls.
        should("test reserveSoc") {
            // uncomment below to test the property
            //modelInstance.reserveSoc shouldBe ("TODO")
        }

        // to test the property `energyIndependence` - Energy independence after peak hours \"enabled\"/\"disabled\". Enabled: Battery will discharge to save money during peak hours when electricity rates are high. Once that is done, energy independence is prioritized. This will increase the energy self-sufficiency until the reserve soc is hit. Battery will charge from solar in the morning to get ready for the next period. Disabled: Battery will discharge only during peak hours when electricity rates are high. During other times, battery will be idle or will charge from solar in the morning to get ready for the next period.
        should("test energyIndependence") {
            // uncomment below to test the property
            //modelInstance.energyIndependence shouldBe ("TODO")
        }

    }
}
