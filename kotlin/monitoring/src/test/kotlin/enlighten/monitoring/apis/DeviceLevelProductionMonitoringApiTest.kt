/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import enlighten.monitoring.apis.DeviceLevelProductionMonitoringApi
import enlighten.monitoring.models.BatteryDeviceTelemetry
import enlighten.monitoring.models.ClientError
import enlighten.monitoring.models.GetSystemMicroDeviceTelemetryResponse
import enlighten.monitoring.models.GetSystems500Response
import enlighten.monitoring.models.MethodNotAllowedError
import enlighten.monitoring.models.NotImplementedError
import enlighten.monitoring.models.TelemetryGranularityEnum
import enlighten.monitoring.models.TooManyRequestsError

class DeviceLevelProductionMonitoringApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of DeviceLevelProductionMonitoringApi
        //val apiInstance = DeviceLevelProductionMonitoringApi()

        // to test getSystemAcbDeviceTelemetry
        should("test getSystemAcbDeviceTelemetry") {
            // uncomment below to test getSystemAcbDeviceTelemetry
            //val systemId : kotlin.Int = 56 // kotlin.Int | Unique numeric ID of the system.
            //val serialNo : kotlin.String = serialNo_example // kotlin.String | Serial number of the acb.
            //val startAt : kotlin.Long = 789 // kotlin.Long | Start time for fetching the telemetry data in Epoch time format. Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
            //val granularity : TelemetryGranularityEnum =  // TelemetryGranularityEnum | Granularity of the telemetry data. Default is 'day'.
            //val result : BatteryDeviceTelemetry = apiInstance.getSystemAcbDeviceTelemetry(systemId, serialNo, startAt, granularity)
            //result shouldBe ("TODO")
        }

        // to test getSystemEnchargeDeviceTelemetry
        should("test getSystemEnchargeDeviceTelemetry") {
            // uncomment below to test getSystemEnchargeDeviceTelemetry
            //val systemId : kotlin.Int = 56 // kotlin.Int | Unique numeric ID of the system.
            //val serialNo : kotlin.String = serialNo_example // kotlin.String | Serial number of the Encharge.
            //val startAt : kotlin.Long = 789 // kotlin.Long | Start time for fetching the telemetry data in Epoch time format. Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
            //val granularity : TelemetryGranularityEnum =  // TelemetryGranularityEnum | Granularity of the telemetry data. Default is 'day'.
            //val result : BatteryDeviceTelemetry = apiInstance.getSystemEnchargeDeviceTelemetry(systemId, serialNo, startAt, granularity)
            //result shouldBe ("TODO")
        }

        // to test getSystemMicroDeviceTelemetry
        should("test getSystemMicroDeviceTelemetry") {
            // uncomment below to test getSystemMicroDeviceTelemetry
            //val systemId : kotlin.Int = 56 // kotlin.Int | Unique numeric ID of the system.
            //val serialNo : kotlin.String = serialNo_example // kotlin.String | Serial number of the individual solar Microinverter.
            //val startAt : kotlin.Long = 789 // kotlin.Long | Start time for fetching the telemetry data in Epoch time format. Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
            //val granularity : TelemetryGranularityEnum =  // TelemetryGranularityEnum | Granularity of the telemetry data. Default is 'day'.
            //val result : GetSystemMicroDeviceTelemetryResponse = apiInstance.getSystemMicroDeviceTelemetry(systemId, serialNo, startAt, granularity)
            //result shouldBe ("TODO")
        }

    }
}
