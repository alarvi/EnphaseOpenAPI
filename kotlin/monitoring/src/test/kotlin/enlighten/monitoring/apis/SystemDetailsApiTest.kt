/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import enlighten.monitoring.apis.SystemDetailsApi
import enlighten.monitoring.models.ClientError
import enlighten.monitoring.models.GetInvertersSummaryByEnvoyOrSiteResponseInner
import enlighten.monitoring.models.GetSystemDevicesResponse
import enlighten.monitoring.models.GetSystemSummaryResponse
import enlighten.monitoring.models.GetSystems500Response
import enlighten.monitoring.models.GetSystemsResponse
import enlighten.monitoring.models.MethodNotAllowedError
import enlighten.monitoring.models.NotImplementedError
import enlighten.monitoring.models.RetrieveSystemIdResponse
import enlighten.monitoring.models.SearchSystemsRequest
import enlighten.monitoring.models.SearchSystemsResponse
import enlighten.monitoring.models.SystemDetails
import enlighten.monitoring.models.SystemSortByEnum
import enlighten.monitoring.models.TooManyRequestsError

class SystemDetailsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SystemDetailsApi
        //val apiInstance = SystemDetailsApi()

        // to test getInvertersSummaryByEnvoyOrSite
        should("test getInvertersSummaryByEnvoyOrSite") {
            // uncomment below to test getInvertersSummaryByEnvoyOrSite
            //val siteId : kotlin.Int = 56 // kotlin.Int | Site ID. The response will contain only those microinverters reporting to one of the active envoys of the given site.
            //val envoySerialNumber : kotlin.String = envoySerialNumber_example // kotlin.String | Active envoy serial number. Only microinverters reporting to the given active envoy will be present in the response.
            //val result : kotlin.collections.List<GetInvertersSummaryByEnvoyOrSiteResponseInner> = apiInstance.getInvertersSummaryByEnvoyOrSite(siteId, envoySerialNumber)
            //result shouldBe ("TODO")
        }

        // to test getSystem
        should("test getSystem") {
            // uncomment below to test getSystem
            //val systemId : kotlin.Int = 56 // kotlin.Int | Unique numeric ID of the system.
            //val result : SystemDetails = apiInstance.getSystem(systemId)
            //result shouldBe ("TODO")
        }

        // to test getSystemDevices
        should("test getSystemDevices") {
            // uncomment below to test getSystemDevices
            //val systemId : kotlin.Int = 56 // kotlin.Int | Unique numeric ID of the system.
            //val result : GetSystemDevicesResponse = apiInstance.getSystemDevices(systemId)
            //result shouldBe ("TODO")
        }

        // to test getSystemSummary
        should("test getSystemSummary") {
            // uncomment below to test getSystemSummary
            //val systemId : kotlin.Int = 56 // kotlin.Int | Unique numeric ID of the system.
            //val result : GetSystemSummaryResponse = apiInstance.getSystemSummary(systemId)
            //result shouldBe ("TODO")
        }

        // to test getSystems
        should("test getSystems") {
            // uncomment below to test getSystems
            //val page : kotlin.Int = 56 // kotlin.Int | Page to be returned. Default=1, Min=1. For example, if page is set to 2, 2nd page is returned.
            //val size : kotlin.Int = 56 // kotlin.Int | Maximum number of records shown per page. Default=10, Min=1, Max=100.  For example, if set to 5, 5 records are shown per page.
            //val sortBy : SystemSortByEnum =  // SystemSortByEnum | Returns list of systems sorted by <sort_by> field. To get ASC order sorted list, user sort_by = <key>. To get DESC order sorted list, use sort_by = (-)<key>. Current sort keys supported are id, name, and last_report_date. By default the list is sorted by decreasing system ID.
            //val result : GetSystemsResponse = apiInstance.getSystems(page, size, sortBy)
            //result shouldBe ("TODO")
        }

        // to test retrieveSystemId
        should("test retrieveSystemId") {
            // uncomment below to test retrieveSystemId
            //val serialNum : kotlin.String = serialNum_example // kotlin.String | Envoy serial number.
            //val result : RetrieveSystemIdResponse = apiInstance.retrieveSystemId(serialNum)
            //result shouldBe ("TODO")
        }

        // to test searchSystems
        should("test searchSystems") {
            // uncomment below to test searchSystems
            //val page : kotlin.Int = 56 // kotlin.Int | Page to be returned. Default=1, Min=1, e.g=2.
            //val size : kotlin.Int = 56 // kotlin.Int | Maximum number of records shown per page. Default=10, Min=1, Max=1000, e.g=5.
            //val params : SearchSystemsRequest =  // SearchSystemsRequest | 
            //val result : SearchSystemsResponse = apiInstance.searchSystems(page, size, params)
            //result shouldBe ("TODO")
        }

    }
}
