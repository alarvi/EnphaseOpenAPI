/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param batteryMode Battery mode of the site. Available values are Savings Mode, Full Backup, and Self-consumption.
 * @param batteryPower Battery power in watts; Power will be positive in case of discharge and negative in case of charge.
 * @param batterySoc Battery soc in percentage.
 * @param consumptionPower Consumption power in watts.
 * @param envoySerialNumber 
 * @param generatorPower Generator power in watts.
 * @param gridPower Grid power in watts; Power will be negative in case of export and positive in case of import.
 * @param gridStatus Grid state of the site. Available values are On Grid, Off Grid, Unknown.
 * @param pvPower PV power in watts.
 * @param systemId The unique numeric ID of the system.
 */


data class StreamSystemLiveDataResponseDataData (

    /* Battery mode of the site. Available values are Savings Mode, Full Backup, and Self-consumption. */
    @Json(name = "battery_mode")
    val batteryMode: kotlin.String? = null,

    /* Battery power in watts; Power will be positive in case of discharge and negative in case of charge. */
    @Json(name = "battery_power")
    val batteryPower: kotlin.Int? = null,

    /* Battery soc in percentage. */
    @Json(name = "battery_soc")
    val batterySoc: kotlin.Int? = null,

    /* Consumption power in watts. */
    @Json(name = "consumption_power")
    val consumptionPower: kotlin.Int? = null,

    @Json(name = "envoy_serial_number")
    val envoySerialNumber: kotlin.collections.List<kotlin.String>? = null,

    /* Generator power in watts. */
    @Json(name = "generator_power")
    val generatorPower: kotlin.Int? = null,

    /* Grid power in watts; Power will be negative in case of export and positive in case of import. */
    @Json(name = "grid_power")
    val gridPower: kotlin.Int? = null,

    /* Grid state of the site. Available values are On Grid, Off Grid, Unknown. */
    @Json(name = "grid_status")
    val gridStatus: kotlin.String? = null,

    /* PV power in watts. */
    @Json(name = "pv_power")
    val pvPower: kotlin.Int? = null,

    /* The unique numeric ID of the system. */
    @Json(name = "system_id")
    val systemId: kotlin.Int? = null

)

