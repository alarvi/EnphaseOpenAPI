/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.models

import enlighten.monitoring.models.SystemAttachmentTypeEnum
import enlighten.monitoring.models.SystemConnectionTypeEnum
import enlighten.monitoring.models.SystemDetailsAddress
import enlighten.monitoring.models.SystemStatusEnum

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param systemId Unique numeric ID of the system.
 * @param name Name of the system.
 * @param publicName Name displayed on the public system page. Available values are All, Residential System, Commercial etc. Default='Residential System'. Only for systems that allow public access.
 * @param timezone Timezone to which the system belongs.
 * @param address 
 * @param connectionType 
 * @param energyLifetime Energy generated by the system during its lifetime in Wh. It is returned only if the count is less than or equal to 100.
 * @param energyToday Energy generated by the system today in Wh. It is returned only if the count is less than or equal to 100.
 * @param systemSize Size of the system. It is returned only if the count is less than or equal to 100.
 * @param status 
 * @param lastReportAt Timestamp (in epoch format) at which the system's Envoy last submitted a report.
 * @param lastEnergyAt Timestamp (in epoch format) at which the system's produced energy was last reported. Even if the last produced energy is 0, its timestamp will be returned.
 * @param operationalAt Timestamp (in epoch format) at which this system became operational. Corresponds to the system's interconnect time, if one is specified. Otherwise, it is the system's first reported interval end time.
 * @param attachmentType 
 * @param interconnectDate Date on which the system was approved to connect to the grid.
 * @param reference If the calling user belongs to a company and that company has provided its own identifier for a system, that ID is included here. Otherwise, this attribute is not returned.
 * @param otherReferences If any other companies have provided their own identifiers for a system, those identifiers are included here. Otherwise, this attribute is not returned.
 */


data class SystemDetails (

    /* Unique numeric ID of the system. */
    @Json(name = "system_id")
    val systemId: kotlin.Int,

    /* Name of the system. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* Name displayed on the public system page. Available values are All, Residential System, Commercial etc. Default='Residential System'. Only for systems that allow public access. */
    @Json(name = "public_name")
    val publicName: kotlin.String? = null,

    /* Timezone to which the system belongs. */
    @Json(name = "timezone")
    val timezone: kotlin.String? = null,

    @Json(name = "address")
    val address: SystemDetailsAddress? = null,

    @Json(name = "connection_type")
    val connectionType: SystemConnectionTypeEnum? = null,

    /* Energy generated by the system during its lifetime in Wh. It is returned only if the count is less than or equal to 100. */
    @Json(name = "energy_lifetime")
    val energyLifetime: kotlin.Int? = null,

    /* Energy generated by the system today in Wh. It is returned only if the count is less than or equal to 100. */
    @Json(name = "energy_today")
    val energyToday: kotlin.Int? = null,

    /* Size of the system. It is returned only if the count is less than or equal to 100. */
    @Json(name = "system_size")
    val systemSize: kotlin.Int? = null,

    @Json(name = "status")
    val status: SystemStatusEnum? = null,

    /* Timestamp (in epoch format) at which the system's Envoy last submitted a report. */
    @Json(name = "last_report_at")
    val lastReportAt: kotlin.Long? = null,

    /* Timestamp (in epoch format) at which the system's produced energy was last reported. Even if the last produced energy is 0, its timestamp will be returned. */
    @Json(name = "last_energy_at")
    val lastEnergyAt: kotlin.Long? = null,

    /* Timestamp (in epoch format) at which this system became operational. Corresponds to the system's interconnect time, if one is specified. Otherwise, it is the system's first reported interval end time. */
    @Json(name = "operational_at")
    val operationalAt: kotlin.Long? = null,

    @Json(name = "attachment_type")
    val attachmentType: SystemAttachmentTypeEnum? = null,

    /* Date on which the system was approved to connect to the grid. */
    @Json(name = "interconnect_date")
    val interconnectDate: java.time.LocalDate? = null,

    /* If the calling user belongs to a company and that company has provided its own identifier for a system, that ID is included here. Otherwise, this attribute is not returned. */
    @Json(name = "reference")
    val reference: kotlin.String? = null,

    /* If any other companies have provided their own identifiers for a system, those identifiers are included here. Otherwise, this attribute is not returned. */
    @Json(name = "other_references")
    val otherReferences: kotlin.collections.List<kotlin.String>? = null

)

