/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param name Name of the dry contact. Name cannot be changed. It is only used to identify the dry contact that needs to be updated.
 * @param loadName Load Name of the load. Load Name cannot be changed. It is only used to identify the dry contact that needs to be updated.
 * @param mode Mode. Available values are \"Scheduled\", \"Basic\", \"Advanced_BatteryPowered\", \"Manual_always_not_powered\", \"Manual_always_powered\", \"Advanced_GeneratorPowered\".
 * @param socLow Applicable for advanced mode. Load will be powered off when the battery soc reaches this level. It can be between 10 to 90.
 * @param essentialStartTime Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time.
 * @param essentialEndTime Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time.
 */


data class UpdateSystemLoadControlSettingsRequest (

    /* Name of the dry contact. Name cannot be changed. It is only used to identify the dry contact that needs to be updated. */
    @Json(name = "name")
    val name: kotlin.String,

    /* Load Name of the load. Load Name cannot be changed. It is only used to identify the dry contact that needs to be updated. */
    @Json(name = "load_name")
    val loadName: kotlin.String? = null,

    /* Mode. Available values are \"Scheduled\", \"Basic\", \"Advanced_BatteryPowered\", \"Manual_always_not_powered\", \"Manual_always_powered\", \"Advanced_GeneratorPowered\". */
    @Json(name = "mode")
    val mode: kotlin.String? = null,

    /* Applicable for advanced mode. Load will be powered off when the battery soc reaches this level. It can be between 10 to 90. */
    @Json(name = "soc_low")
    val socLow: kotlin.Int? = null,

    /* Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time. */
    @Json(name = "essential_start_time")
    val essentialStartTime: kotlin.Int? = null,

    /* Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time. */
    @Json(name = "essential_end_time")
    val essentialEndTime: kotlin.Int? = null

)

