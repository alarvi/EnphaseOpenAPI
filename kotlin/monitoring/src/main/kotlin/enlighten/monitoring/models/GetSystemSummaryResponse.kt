/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.models

import enlighten.monitoring.models.SystemStatusEnum

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param systemId Unique numeric ID of the system.
 * @param currentPower Current power production of the system in Watts.
 * @param energyLifetime Energy generated by the system during its lifetime in Wh.
 * @param energyToday Energy generated by the system today in Wh.
 * @param lastIntervalEndAt Last known time that the system produced energy. When a system has not been communicating for a length of time, the last_report_at can be recent, whereas the last_interval_end_at may be further back.
 * @param lastReportAt Timestamp (in epoch format) at which the system's Envoy last submitted a report.
 * @param modules Total number of modules in the system.
 * @param operationalAt Timestamp (in epoch format) at which this system became operational. Corresponds to the system's interconnect time, if one is specified. Otherwise, it is the system's first reported interval end time.
 * @param sizeW System size in watts.
 * @param source Source of energy measurement.
 * @param status 
 * @param summaryDate Summary date.
 */


data class GetSystemSummaryResponse (

    /* Unique numeric ID of the system. */
    @Json(name = "system_id")
    val systemId: kotlin.Int? = null,

    /* Current power production of the system in Watts. */
    @Json(name = "current_power")
    val currentPower: kotlin.Int? = null,

    /* Energy generated by the system during its lifetime in Wh. */
    @Json(name = "energy_lifetime")
    val energyLifetime: kotlin.Int? = null,

    /* Energy generated by the system today in Wh. */
    @Json(name = "energy_today")
    val energyToday: kotlin.Int? = null,

    /* Last known time that the system produced energy. When a system has not been communicating for a length of time, the last_report_at can be recent, whereas the last_interval_end_at may be further back. */
    @Json(name = "last_interval_end_at")
    val lastIntervalEndAt: kotlin.Long? = null,

    /* Timestamp (in epoch format) at which the system's Envoy last submitted a report. */
    @Json(name = "last_report_at")
    val lastReportAt: kotlin.Long? = null,

    /* Total number of modules in the system. */
    @Json(name = "modules")
    val modules: kotlin.Int? = null,

    /* Timestamp (in epoch format) at which this system became operational. Corresponds to the system's interconnect time, if one is specified. Otherwise, it is the system's first reported interval end time. */
    @Json(name = "operational_at")
    val operationalAt: kotlin.Long? = null,

    /* System size in watts. */
    @Json(name = "size_w")
    val sizeW: kotlin.Int? = null,

    /* Source of energy measurement. */
    @Json(name = "source")
    val source: kotlin.String? = null,

    @Json(name = "status")
    val status: SystemStatusEnum? = null,

    /* Summary date. */
    @Json(name = "summary_date")
    val summaryDate: java.time.LocalDate? = null

)

