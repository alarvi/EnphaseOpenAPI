/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param name Name of the dry contact.
 * @param loadName Name of the load.
 * @param ownerCanOverride HOs ability to override the load control settings.
 * @param mode Current load control configuration.
 * @param socLow Applicable for advanced mode. Load will be powered off when the battery soc reaches this level.
 * @param socHigh Applicable for advanced mode. Load powers off when battery reaches soc_low. The load will be powered on when the battery soc reaches soc_high.
 * @param status Available values are enabled, disabled.
 * @param essentialStartTime Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time.
 * @param essentialEndTime Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time.
 */


data class LoadControlSettingsLoadControlDataInner (

    /* Name of the dry contact. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* Name of the load. */
    @Json(name = "load_name")
    val loadName: kotlin.String? = null,

    /* HOs ability to override the load control settings. */
    @Json(name = "owner_can_override")
    val ownerCanOverride: kotlin.String? = null,

    /* Current load control configuration. */
    @Json(name = "mode")
    val mode: kotlin.String? = null,

    /* Applicable for advanced mode. Load will be powered off when the battery soc reaches this level. */
    @Json(name = "soc_low")
    val socLow: kotlin.Int? = null,

    /* Applicable for advanced mode. Load powers off when battery reaches soc_low. The load will be powered on when the battery soc reaches soc_high. */
    @Json(name = "soc_high")
    val socHigh: kotlin.Int? = null,

    /* Available values are enabled, disabled. */
    @Json(name = "status")
    val status: kotlin.String? = null,

    /* Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time. */
    @Json(name = "essential_start_time")
    val essentialStartTime: kotlin.Int? = null,

    /* Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time. */
    @Json(name = "essential_end_time")
    val essentialEndTime: kotlin.Int? = null

)

