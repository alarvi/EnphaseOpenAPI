/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param systemId 
 * @param batteryMode Current battery mode of the system. Available values are Savings Mode, Full Backup, and Self - Consumption.
 * @param reserveSoc Reserve soc for the current mode.
 * @param energyIndependence Energy independence after peak hours enabled/disabled. Enabled: Battery will discharge to save money during peak hours when electricity rates are high. Once that is done, energy independence is prioritized. This will increase the energy self-sufficiency until the reserve soc is hit. Battery will charge from solar in the morning to get ready for the next period. Disabled: Battery will discharge only during peak hours when electricity rates are high. During other times, battery will be idle or will charge from solar in the morning to get ready for the next period.
 * @param chargeFromGrid Charge battery from grid enabled/disabled. Enabled: Battery may also charge from the grid when in full backup mode or when battery charge is below the reserve capacity in savings or self-consumption mode.
 * @param batteryShutdownLevel Level at which battery shutdowns to conserve energy. Battery restarts by using the conserved energy when the utility grid restores power or solar panels start producing energy.
 */


data class BatterySettings (

    @Json(name = "system_id")
    val systemId: kotlin.Int? = null,

    /* Current battery mode of the system. Available values are Savings Mode, Full Backup, and Self - Consumption. */
    @Json(name = "battery_mode")
    val batteryMode: kotlin.String? = null,

    /* Reserve soc for the current mode. */
    @Json(name = "reserve_soc")
    val reserveSoc: kotlin.Int? = null,

    /* Energy independence after peak hours enabled/disabled. Enabled: Battery will discharge to save money during peak hours when electricity rates are high. Once that is done, energy independence is prioritized. This will increase the energy self-sufficiency until the reserve soc is hit. Battery will charge from solar in the morning to get ready for the next period. Disabled: Battery will discharge only during peak hours when electricity rates are high. During other times, battery will be idle or will charge from solar in the morning to get ready for the next period. */
    @Json(name = "energy_independence")
    val energyIndependence: kotlin.String? = null,

    /* Charge battery from grid enabled/disabled. Enabled: Battery may also charge from the grid when in full backup mode or when battery charge is below the reserve capacity in savings or self-consumption mode. */
    @Json(name = "charge_from_grid")
    val chargeFromGrid: kotlin.String? = null,

    /* Level at which battery shutdowns to conserve energy. Battery restarts by using the conserved energy when the utility grid restores power or solar panels start producing energy. */
    @Json(name = "battery_shutdown_level")
    val batteryShutdownLevel: kotlin.Int? = null

)

