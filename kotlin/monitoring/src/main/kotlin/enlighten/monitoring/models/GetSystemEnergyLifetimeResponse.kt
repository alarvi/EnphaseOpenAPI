/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package enlighten.monitoring.models

import enlighten.monitoring.models.Meta

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param systemId System ID.
 * @param startDate When no start_date parameter is specified on the request, this is the operational_date of the system. May be null if system has never produced. When a start_date parameter is included in the request, it is included here in the response.
 * @param meterStartDate First day in the time series when measurements are taken from a meter instead of from microinverters. This field is not present unless the system has a meter.
 * @param production An array of production measurements, one for each day since the system started producing, or one for each day of the requested period. If the system has never produced energy, the array may be empty.
 * @param microProduction 
 * @param meterProduction 
 * @param meta 
 */


data class GetSystemEnergyLifetimeResponse (

    /* System ID. */
    @Json(name = "system_id")
    val systemId: kotlin.Int? = null,

    /* When no start_date parameter is specified on the request, this is the operational_date of the system. May be null if system has never produced. When a start_date parameter is included in the request, it is included here in the response. */
    @Json(name = "start_date")
    val startDate: java.time.LocalDate? = null,

    /* First day in the time series when measurements are taken from a meter instead of from microinverters. This field is not present unless the system has a meter. */
    @Json(name = "meter_start_date")
    val meterStartDate: java.time.LocalDate? = null,

    /* An array of production measurements, one for each day since the system started producing, or one for each day of the requested period. If the system has never produced energy, the array may be empty. */
    @Json(name = "production")
    val production: kotlin.collections.List<kotlin.Int>? = null,

    @Json(name = "micro_production")
    val microProduction: kotlin.collections.List<kotlin.Int>? = null,

    @Json(name = "meter_production")
    val meterProduction: kotlin.collections.List<kotlin.Int>? = null,

    @Json(name = "meta")
    val meta: Meta? = null

)

